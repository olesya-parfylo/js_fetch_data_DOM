{"version":3,"sources":["scripts/main.js"],"names":["baseUrl","list","request","url","fetch","then","responce","json","getPhones","Promise","resolved","rejected","phones","setTimeout","getPhonesDetails","listPhones","map","phone","id","phonesDetails","phonesIdsRequest","all","showPhoneNames","arrPhones","document","body","style","alignItems","marginLeft","transform","cell","createElement","innerText","marginTop","fontSize","append","getPhoneById","arrPromise","arr","find","item","phonesArray","phonesList","phonesWithDetails"],"mappings":";AAAA,aAEA,IAAMA,EAAU,mEAGVC,EAAUD,GAAAA,OAAAA,EAAhB,SAEA,SAASE,EAAQC,GACRC,OAAAA,MAAMD,GACVE,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAG/B,SAASC,EAAUL,GAYV,OAAA,IAAIM,QAXM,SAACC,EAAUC,GAC1BT,EAAQC,GACLE,KAAK,SAAAO,GACJF,EAASE,KAGbC,WAAW,WACTF,KACC,OAMP,SAASG,EAAiBC,GACjBA,OAAAA,EAAWC,IAAI,SAAAC,GAASf,OAAAA,EAAWF,GAAAA,OAAAA,EAAWiB,KAAAA,OAAAA,EAAMC,GAAhC,YAG7B,IAAMC,EAAgBX,EAAUP,GAC7BI,KAAK,SAAAe,GAAoBX,OAAAA,QAAQY,IAAIP,EAAiBM,MAKzD,SAASE,EAAeC,GACtBC,SAASC,KAAKC,MAAM,kBAAoB,SACxCF,SAASC,KAAKC,MAAMC,WAAa,aACjCH,SAASC,KAAKC,MAAME,WAAa,MACjCJ,SAASC,KAAKC,MAAMG,UAAY,mBAEhCN,EAAUP,IAAI,SAAAC,GACNa,IAAAA,EAAON,SAASO,cAAc,OAEpCD,EAAKE,UAAYf,EAAMC,GACvBY,EAAKJ,MAAMO,UAAY,OACvBH,EAAKJ,MAAMQ,SAAW,OACtBV,SAASC,KAAKU,OAAOL,KAIzB,SAASM,EAAaC,EAAYnB,GACzBmB,OAAAA,EACJhC,KAAK,SAAAiC,GAAOA,OAAAA,EAAIC,KAAK,SAAAC,GAAQA,OAAAA,EAAKtB,KAAOA,MArB9CC,EACGd,KAAK,SAAAoC,GAAenB,OAAAA,EAAemB,KAuBtCjC,EAAUP,GACPI,KAAK,SAAAqC,GAOGC,OANmBD,EAAW1B,IAAI,SAACC,GAGjCA,OAFPA,EAAMC,GAAKkB,EAAajB,EAAeF,EAAMC,IAEtCD","file":"main.01eb9772.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst baseUrl = `https://mate-academy.github.io/`\n  + `phone-catalogue-static/api/phones`;\n\nconst list = `${baseUrl}.json`;\n\nfunction request(url) {\n  return fetch(url)\n    .then(responce => responce.json());\n}\n\nfunction getPhones(url) {\n  const resolver = (resolved, rejected) => {\n    request(url)\n      .then(phones => {\n        resolved(phones);\n      });\n\n    setTimeout(() => {\n      rejected();\n    }, 5000);\n  };\n\n  return new Promise(resolver);\n}\n\nfunction getPhonesDetails(listPhones) {\n  return listPhones.map(phone => request(`${baseUrl}/${phone.id}.json`));\n}\n\nconst phonesDetails = getPhones(list)\n  .then(phonesIdsRequest => Promise.all(getPhonesDetails(phonesIdsRequest)));\n\nphonesDetails\n  .then(phonesArray => showPhoneNames(phonesArray));\n\nfunction showPhoneNames(arrPhones) {\n  document.body.style['flex-direction'] = 'column';\n  document.body.style.alignItems = 'flex-start';\n  document.body.style.marginLeft = '50%';\n  document.body.style.transform = 'translateX(-25%)';\n\n  arrPhones.map(phone => {\n    const cell = document.createElement('div');\n\n    cell.innerText = phone.id;\n    cell.style.marginTop = '10px';\n    cell.style.fontSize = '20px';\n    document.body.append(cell);\n  });\n}\n\nfunction getPhoneById(arrPromise, id) {\n  return arrPromise\n    .then(arr => arr.find(item => item.id === id));\n}\n\ngetPhones(list)\n  .then(phonesList => {\n    const phonesWithDetails = phonesList.map((phone) => {\n      phone.id = getPhoneById(phonesDetails, phone.id);\n\n      return phone;\n    });\n\n    return phonesWithDetails;\n  });\n"]}